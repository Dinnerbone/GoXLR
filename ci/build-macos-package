#!/bin/bash

# This grabs the binaries made in previous steps, and turns them into 'Universal' binaries which can be used on
# either x64 or M1 hardware.
VERSION=$1

mkdir package
mkdir package/x86_64
mkdir package/aarch64

tar -zxvf macos_binaries_*-x86_64-apple-darwin* -C package/x86_64
tar -zxvf macos_binaries_*-aarch64-apple-darwin* -C package/aarch64

rm -f macos_binaries_*

cd package || exit
mkdir final

lipo -create -output final/goxlr-client x86_64/goxlr-client aarch64/goxlr-client
lipo -create -output final/goxlr-daemon x86_64/goxlr-daemon aarch64/goxlr-daemon
lipo -create -output final/goxlr-launcher x86_64/goxlr-launcher aarch64/goxlr-launcher
lipo -create -output final/goxlr-defaults x86_64/goxlr-defaults aarch64/goxlr-defaults
lipo -create -output final/goxlr-initialiser x86_64/goxlr-initialiser aarch64/goxlr-initialiser
lipo -create -output final/goxlr-utility-ui x86_64/goxlr-utility-ui aarch64/goxlr-utility-ui

# Ok, build our .app..
DATE=$(date +"%Y%m%d.%H%M%S")

mkdir 'GoXLR Utility.app'
mkdir -p 'GoXLR Utility.app/Contents/MacOS'
mkdir -p 'GoXLR Utility.app/Contents/Resources'
cp final/* 'GoXLR Utility.app/Contents/MacOS'
cp ../ci/macos/icons.icns 'GoXLR Utility.app/Contents/Resources'

# Generate the plist for the App..
sed -e "s/{{VERSION}}/$VERSION/g" ../ci/macos/Info.plist.template | sed -e "s/{{DATE}}/$DATE/g" > 'GoXLR Utility.app/Contents/Info.plist'

# Compress the .app..
tar zcvf "../goxlr-utility-macos-$VERSION.tgz" 'GoXLR Utility.app'